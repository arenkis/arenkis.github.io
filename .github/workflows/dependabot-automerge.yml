name: Auto-merge Dependabot PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Auto-approve PR
        run: |
          gh pr review ${{ github.event.number }} --approve --body "Auto-approved by workflow"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Check for auto-merge label and enable auto-merge
        run: |
          # Check if PR has the auto-merge label
          if gh pr view ${{ github.event.number }} --json labels --jq '.labels[].name' | grep -q "auto-merge"; then
            echo "Auto-merge label found, enabling auto-merge"
            gh pr merge ${{ github.event.number }} --auto --squash --delete-branch
          else
            echo "No auto-merge label found, skipping"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Alternative: Auto-approve then merge
  auto-approve-and-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Auto-approve
        uses: hmarr/auto-approve-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-merge
        uses: pascalgn/merge-action@v0.15.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          merge_method: squash
          merge_labels: dependencies
          merge_remove_labels: ""
          merge_commit_message: "pull-request-title-and-description"